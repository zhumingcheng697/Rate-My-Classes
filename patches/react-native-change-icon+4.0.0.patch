diff --git a/node_modules/react-native-change-icon/index.js b/node_modules/react-native-change-icon/index.js
index eec5553..d9e010b 100644
--- a/node_modules/react-native-change-icon/index.js
+++ b/node_modules/react-native-change-icon/index.js
@@ -1,7 +1,9 @@
 import { NativeModules } from "react-native";
 
+const supportsAlternateIcon = () => NativeModules.ChangeIcon.supportsAlternateIcon();
+
 const changeIcon = (iconName) => NativeModules.ChangeIcon.changeIcon(iconName);
 
 const getIcon = () => NativeModules.ChangeIcon.getIcon();
 
-export { changeIcon, getIcon };
+export { supportsAlternateIcon, changeIcon, getIcon };
diff --git a/node_modules/react-native-change-icon/ios/ChangeIcon.mm b/node_modules/react-native-change-icon/ios/ChangeIcon.mm
index d5c6b57..42c6d17 100644
--- a/node_modules/react-native-change-icon/ios/ChangeIcon.mm
+++ b/node_modules/react-native-change-icon/ios/ChangeIcon.mm
@@ -11,6 +11,13 @@ + (BOOL)requiresMainQueueSetup {
     return NO;
 }
 
+RCT_REMAP_METHOD(supportsAlternateIcon, supportsAlternateIcon:(RCTPromiseResolveBlock)resolve onError:(RCTPromiseRejectBlock)reject) {
+    dispatch_async(dispatch_get_main_queue(), ^{
+        bool isSupported = [[UIApplication sharedApplication] supportsAlternateIcons];
+        resolve(@(isSupported));
+    });
+}
+
 RCT_REMAP_METHOD(getIcon, resolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
     dispatch_async(dispatch_get_main_queue(), ^{
         NSString *currentIcon = [[UIApplication sharedApplication] alternateIconName];
